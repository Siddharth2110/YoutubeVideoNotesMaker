  Special purpose sorting algorithms On CountingRadixBucketSort, etc. Although rarely used, these special purpose algorithms are good toknow as they can reduce the required sorting time if the data hascertain special characteristics. For example, Counting Sort can be applied to integer data that liesina small range see Section 9.32.  There are generally three common methods to search for an item inan array On Linear Search Consider every element from index O to index n- 1 avoid this whenever possible. Olog n Binary Search Use lower bound, upper bound, or binarysearch in C STL algorithm or Java Collections.binarySearch. If theinput array is unsorted, it is necessary to sort the array at least onceusing one of the On log n sorting algorithm above beforeexecuting one or many Binary Searches.  earches.  . O1 with Hashing This is a useful technique to use when fast accessto known values are required. If a suitable hash function is selected,the probability of a collision to be made is negligibly small. Still, thistechnique is rarely used and we can live without it6 for mostcontest problems. Array of Booleans C STL bitset Java BitSet If our array needsonly to contain Boolean values 1true and 0false, we can use analternative data structure other than an arraya C STL bitset. Thebitset supports useful operations like reset, set, the  operatorand test.  . Bitmasks a.k.a. lightweight, small sets of Booleans native supportin CCJava An integer is stored in a computers memory as asequencestring of bits. Thus, we can use integers to represent alightweight small set of Boolean values.  n values.  n values.  n values. All set operations then involve only the bitwise manipulation of thecorresponding integer, which makes it a much more efficient choicewhen compared with the C STL vectorbool, bitset, or setintoptions. Such speed is important in competitive programming. Someimportant operations that are used in this book are shown below. Many bit manipulation operations are written as preprocessormacros in our CC example source code but written plainly in ourJava example code since Java does not support macros.   macros.   macros. Linked List C STL list Java LinkedList Although this data structurealmost always appears in data structure and algorithm textbooks, theLinked List is usually avoided in typical contest problems. This is due to the inefficiency in accessing elements a linear scanhas to be performed from the head or the tail of a list and the usageof pointers makes it prone to runtime errors if not implementedproperly.In this book, almost all forms of Linked List have beenreplaced by the more flexible C STL vector Java Vector. The only exception is probably UVa 11988 - Broken Keyboard a.k.a.Beiju Text where you are required to dynamically maintain alinked list of characters and efficiently insert a new characteranywhere in the list, i.e. at front head, current, or backtail of the linked list.  t. Stack C STL stack Java Stack This data structure is often used as part of algorithms that solvecertain problems e.g. bracket matching in Section 9.4, Postfixcalculator and Infix to Postfix conversion in Section 9.27, findingStrongly Connected Components in Section 4.2.9 and Grahams scanin Section 7.3.7. Astack only allows for O1 insertion push and O1 deletion popfrom the top.  .  nly allows for O1 insertion push and O1 deletion popfrom the top. This behavior is usually referred to as Last In First Out LIFO and isreminiscent of literal stacks in the real world. Typical C STL stackoperations include pushpop insertremove from top of stack,top obtain content from the top of stack, and empty. Queue C STL queue Java Queue9This data structure is used in algorithms like Breadth First SearchBFS in Section 4.2.2. A queue only allows for O1 insertionenqueue from the back tail and O1 deletion dequeue from thefront head. This behavior is similarly referred to as First In First Out FIFO, justlike actual queues in the real world.   world.   operations include pushpop insert frombackremove from front of queue, frontback obtain contentfrom the frontback of queue, and empty. Double-ended Queue Deque C STL deque Java Deque10This data structure is very similar to the resizeable array vector andqueue above, except that deques support fast O1 insertions anddeletions at both the beginning and the end of the deque. This feature is important in certain algorithm, e.g. The SlidingWindow algorithm in Section 9.31. Typical C STL deque operationsinclude push back, pop front just like the normal queue, pushfront and pop back specific for deque.   .   