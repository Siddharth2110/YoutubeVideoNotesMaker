 In 101 2009 and 2010, there has been 1 easy task per competitionday11, usually an Easy Ad Hoc task. If you are an IOI contestant, you will definitely not win any medalsfor just solving the 2 easy Ad Hoc tasks over the 2 competition days.However, the faster you can clear these 2 easy tasks, the more timethat you will have to work on the other 2 x 3  6 challenging tasks. We have listed many Ad Hoc problems that we have solved in theUVa Online Judge47 in the several categories below. We believe that you can solve most of these problems withoutusing the advanced data structures or algorithms that will bediscussed in the later chapters. Many of these Ad Hoc problems are simple but some of themmaybe tricky. Try to solve a few problems from each category before reading thenext chapter.  . Note A small number of problems, although listed as part ofChapter 1, may require knowledge from subsequent chapters, e.g.knowledge of linear data structures arrays in Section 2.2,knowledge of backtracking in Section 3.2, etc. You can revisit these harder Ad Hoc problems after you haveunderstood the required concepts.The categories Game CardThere are lots of Ad Hoc problems involving popular games. Manyare related to card games. You will usually need to parse the inputstrings see Section 6.3 as playing cards have both suits.  s.  h suits. Game Chess Chess is another popular game that sometimes appears inprogramming contest problems. Some of these problems are Ad Hoc and listed in this section.Some of them are combinatorial with tasks like counting how manyways there are to place 8-queens in 8 x 8 chess board. These are listed in Chapter 3. Game Others, easier and harder or more tediousOther than card and chess games, many other popular games havemade their way into programming contests Tic Tac Toe, Rock-Paper-Scissors, SnakesLadders, BINGO, Bowling, etc.  . Problems related to PalindromesThese are also classic problems. A palindrome is a word orasequence that can be read the same way in either direction. The most common strategy to check if a word is palindromic is toloop from the first character to the middle one and check if thecharacters match in the corresponding position from the back. For example, ABCDCBA is a palindrome. For some harderpalindrome-related problems, you may want to check Section 6.5for Dynamic Programming solutions.  .  . Problems related to Anagrams This is yet another class of classic problems. An anagram is a word or phrase whose letters can be rearrangedto obtain another word or phrase. The common strategy to check if two words are anagrams is tosort the letters of the words and compare the results. For example,take wordA  cab, wordB  bca.  rdB  bca.  rdB  bca.  rdB  bca. After sorting, wordA  abc and wordB  abc too, so they areanagrams. See Section 2.2 for various sorting techniques. Interesting Real Life Problems, easier and harder or moretedious This is one of the most interesting problem categories in the UVaOnline Judge. We believe that real life problems like these are interesting tothose who are new to Computer Science. The fact that we write programs to solve real life problems can bean additional motivational boost.  l boost. Who knows, you might stand togain new and interesting information from the problemdescription! Ad Hoc problems involving Time These problems utilize time concepts such as dates, times, andcalendars. These are also real life problems. As mentioned earlier, theseproblems can be a little more interesting to solve. Some of these problems will be far easier to solve if you havemastered the Java GregorianCalendar class as it has many libraryfunctions that deal with time.  th time.   time. Time Waster problems These are Ad Hoc problems that are written specifically to makethe required solution long and tedious. These problems, if they do appear in a programming contest,would determine the team with the most efficient codersomeonewho can implement complicated but still accurate solutions undertime constraints. Coaches should consider adding such problems intheir training programmes.  ammes.  